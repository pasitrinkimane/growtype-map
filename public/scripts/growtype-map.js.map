{"version":3,"file":"/scripts/growtype-map.js","mappings":"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","sources":["webpack://plugin/webpack/runtime/chunk loaded","webpack://plugin/./resources/scripts/partials/createMarker.js","webpack://plugin/./resources/scripts/partials/itemExistsWhenFiltersApplied.js","webpack://plugin/./resources/scripts/partials/setMarkers.js","webpack://plugin/./resources/scripts/partials/updateMarkers.js","webpack://plugin/./resources/scripts/partials/updateMarkersClusters.js","webpack://plugin/./resources/scripts/growtype-map.js","webpack://plugin/./resources/scripts/partials/setMapInstance.js","webpack://plugin/./resources/scripts/partials/search/initSearch.js","webpack://plugin/./resources/scripts/partials/listeners/tilesloadedListener.js","webpack://plugin/./resources/scripts/partials/listeners/idleListener.js","webpack://plugin/./resources/scripts/partials/filters/taxonomyFilter.js","webpack://plugin/webpack/bootstrap","webpack://plugin/webpack/runtime/hasOwnProperty shorthand","webpack://plugin/webpack/runtime/jsonp chunk loading","webpack://plugin/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n *\n * @param width\n * @param height\n * @param radius\n * @returns {string}\n */\nfunction createMarker(width, height, radius, text) {\n\n    var canvas, context;\n\n    canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext(\"2d\");\n\n    context.clearRect(0, 0, width, height);\n\n    context.fillStyle = \"#23A073\";\n\n    context.strokeStyle = \"white\";\n\n    context.beginPath();\n    context.moveTo(radius, 0);\n    context.lineTo(width - radius, 0);\n    context.quadraticCurveTo(width, 0, width, radius);\n    context.lineTo(width, height - radius);\n    context.quadraticCurveTo(width, height, width - radius, height);\n    context.lineTo(radius, height);\n    context.quadraticCurveTo(0, height, 0, height - radius);\n    context.lineTo(0, radius);\n    context.quadraticCurveTo(0, 0, radius, 0);\n\n    context.lineWidth = 5;\n\n    context.closePath();\n\n    context.fill();\n    context.stroke();\n\n    context.font = \"16px Arial\";\n    context.fillStyle = \"white\";\n    context.textAlign = \"center\";\n    context.fillText(text, canvas.width / 2, canvas.height / 2 + 6);\n\n    return canvas.toDataURL();\n}\n\nexport {createMarker};\n","function itemExistsWhenFiltersApplied(mapId, categories, locations, groupCategories = null, groupLocations = null) {\n    let itemExists = false;\n\n    let categoryExists = false;\n    window.growtypeMap[mapId]['dynamic']['selectedTax'].map(item => {\n        if ((categories !== null && categories.indexOf(item) != -1) || (groupCategories && groupCategories.indexOf(item) != -1)) {\n            categoryExists = true;\n        }\n    });\n\n    if (categoryExists && window.growtypeMap[mapId]['dynamic']['selectedTax2'].length === 0) {\n        return true;\n    }\n\n    let areaExists = false;\n    window.growtypeMap[mapId]['dynamic']['selectedTax2'].map(item => {\n        if ((locations !== null && locations.indexOf(item) != -1) || (groupLocations && groupLocations.indexOf(item) != -1)) {\n            areaExists = true;\n        }\n    });\n\n    if (areaExists && selectedTax.length === 0) {\n        return true;\n    }\n\n    if (categoryExists && areaExists) {\n        return true;\n    }\n\n    if (window.growtypeMap[mapId]['dynamic']['selectedTax'].length === 0 && window.growtypeMap[mapId]['dynamic']['selectedTax2'].length === 0) {\n        return true;\n    }\n\n    return itemExists;\n}\n\nexport {itemExistsWhenFiltersApplied};\n","import {createMarker} from \"./createMarker\";\nimport {itemExistsWhenFiltersApplied} from \"./itemExistsWhenFiltersApplied\";\n\n/**\n * @type {boolean}\n * Get markers\n */\nlet markersLoading = false;\n\nfunction setMarkers(mapId, groupId, clearOldMarkers = true) {\n    if (!markersLoading) {\n        /**\n         * Spinner\n         */\n        $('.growtype-map-container[data-map-id=\"' + mapId + '\"] + .spinner-border').show();\n\n        /**\n         * Clear out the old markers.\n         */\n        if (Array.isArray(window.growtypeMap[mapId]['dynamic']['markersGroups']) && clearOldMarkers) {\n            Object.values(window.growtypeMap[mapId]['dynamic']['markersGroups']).map((markerGroup) => {\n                markerGroup['markers'].map(function (element) {\n                    element.setMap(null);\n                })\n            });\n        }\n\n        /**\n         * Clear out the old markerCluster.\n         */\n        if (window.growtypeMap[mapId]['dynamic']['markerCluster'] !== undefined && clearOldMarkers) {\n            window.growtypeMap[mapId]['dynamic']['markerCluster'].clearMarkers();\n        }\n\n        /**\n         * @type {google.maps.LatLngBounds}\n         */\n        let bounds = new google.maps.LatLngBounds();\n\n        const filteredMarkers = [];\n\n        let visibleMarkersCounter = 1;\n\n        let groupCategories = window.growtypeMap[mapId]['static']['markersGroups'][groupId]['categories']\n        let groupLocations = window.growtypeMap[mapId]['static']['markersGroups'][groupId]['locations']\n\n        if (window.growtypeMap[mapId]['static']['initiallyShowAllRoutes'] === 'false' && clearOldMarkers) {\n            window.growtypeMap[mapId]['dynamic']['polylines'].map(function (element) {\n                element.setMap(null);\n            })\n        }\n\n        /**\n         * Map through markers\n         */\n        window.growtypeMap[mapId]['static']['markersGroups'][groupId]['markers'].map(function (marker, i) {\n            if (marker.enabled === 'false') {\n                return false;\n            }\n\n            if (window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId']) {\n                if (window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId'] !== groupId) {\n                    return false;\n                }\n            }\n\n            if (!itemExistsWhenFiltersApplied(mapId, marker.categories, marker.locations, groupCategories, groupLocations)) {\n                return false;\n            }\n\n            let latlng = marker.latLng.replace(/\\s/g, \"\").split(\",\")\n            let lat = latlng[0]\n            let lng = latlng[1]\n\n            if (!inrange(-90, lat, 90) || !inrange(-180, lng, 180)) {\n                console.error('Growtype Map. Marker is not in range. Marker: ', marker);\n                return false;\n            }\n\n            let position = new google.maps.LatLng(lat, lng);\n\n            bounds.extend(position);\n\n            window.growtypeMap[mapId]['dynamic']['mapInstance'].fitBounds(bounds);\n\n            let scaletSize = new google.maps.Size(parseInt(marker.icon.width), parseInt(marker.icon.height));\n\n            const custom_icon = {\n                url: marker.icon.url,\n                scaledSize: scaletSize, // scaled size\n                origin: new google.maps.Point(0, 0), // origin\n                anchor: new google.maps.Point(15, 40) // anchor\n            };\n\n            if (window.growtypeMap[mapId]['static']['map_type'] === 'route') {\n                custom_icon['anchor'] = new google.maps.Point(10, 40)\n            }\n\n            let marketData = {\n                position: position,\n                optimized: true,\n                map: window.growtypeMap[mapId]['dynamic']['mapInstance'],\n            };\n\n            if (typeof marker.icon !== 'undefined' && marker.icon.url) {\n                if (window.growtypeMap[mapId]['static']['map_type'] === 'route') {\n                    marketData['icon'] = {\n                        url: createMarker(30, 30, 19, visibleMarkersCounter),\n                        // scaledSize: scaletSize, // scaled size\n                        origin: new google.maps.Point(0, 0), // origin\n                        anchor: new google.maps.Point(15, 20) // anchor\n                    }\n                    visibleMarkersCounter++;\n                } else {\n                    marketData['icon'] = custom_icon;\n                }\n            } else if (location.type === 'hidden') {\n                marketData['icon'] = '#';\n            }\n\n            /**\n             * Set marker\n             */\n            let newMarker = new google.maps.Marker(marketData);\n\n            /**\n             * Infowindow\n             */\n            let infowindow = null;\n            if (marker.infowindow.enabled === 'true') {\n                const contentString = marker.infowindow ? marker.infowindow.content : '';\n\n                infowindow = new google.maps.InfoWindow({\n                    content: contentString,\n                });\n            }\n\n            /**\n             * Click event on map\n             */\n            google.maps.event.addListener(window.growtypeMap[mapId]['dynamic']['mapInstance'], 'click', function () {\n                if (marker.infowindow.enabled === 'true') {\n                    if (infowindow) {\n                        infowindow.close();\n                    }\n\n                    if (window.growtypeMap[mapId]['dynamic']['prevInfoWindow']) {\n                        window.growtypeMap[mapId]['dynamic']['prevInfoWindow'].close();\n                    }\n                }\n            });\n\n            /**\n             * Map zoom changed\n             */\n            google.maps.event.addListener(window.growtypeMap[mapId]['dynamic']['mapInstance'], 'zoom_changed', function () {\n                if (marker.infowindow.enabled === 'true') {\n                    if (window.growtypeMap[mapId]['dynamic']['prevInfoWindow']) {\n                        window.growtypeMap[mapId]['dynamic']['prevInfoWindow'].close();\n                    }\n                }\n\n                /**\n                 * Initial zoom fix\n                 */\n                let zoomChangeBoundsListener = google.maps.event.addListener(window.growtypeMap[mapId]['dynamic']['mapInstance'], 'bounds_changed', function (event) {\n                    if (this.getZoom() > 15 && this.initialZoom == true) {\n                        this.setZoom(15);\n                        this.initialZoom = false;\n                    }\n\n                    google.maps.event.removeListener(zoomChangeBoundsListener);\n                });\n            });\n\n            /**\n             * Click event on marker\n             */\n            google.maps.event.addListener(newMarker, 'click', function (evt) {\n                if (marker.infowindow.enabled === 'true') {\n                    if (window.growtypeMap[mapId]['dynamic']['prevInfoWindow']) {\n                        window.growtypeMap[mapId]['dynamic']['prevInfoWindow'].close();\n                    }\n\n                    infowindow.open({\n                        anchor: newMarker,\n                        map: window.growtypeMap[mapId]['dynamic']['mapInstance'],\n                        shouldFocus: false,\n                    });\n\n                    window.growtypeMap[mapId]['dynamic']['prevInfoWindow'] = infowindow\n                }\n            })\n\n            /**\n             * Return new markers array\n             */\n            filteredMarkers.push(newMarker)\n        });\n\n        /**\n         * Polyline\n         */\n        if (window.growtypeMap[mapId]['static']['map_type'] === 'route') {\n            if (window.growtypeMap[mapId]['dynamic']['polylines'][groupId] !== undefined && typeof window.growtypeMap[mapId]['dynamic']['polylines'][groupId].setMap === \"function\" && clearOldMarkers) {\n                window.growtypeMap[mapId]['dynamic']['polylines'][groupId].setMap(null);\n            }\n\n            window.growtypeMap[mapId]['dynamic']['polylines'][groupId] = new google.maps.Polyline({\n                strokeColor: \"#0F524A\",\n                strokeOpacity: 0.8,\n                strokeWeight: 5,\n            });\n\n            setPreciseRoute(groupId, filteredMarkers, window.growtypeMap[mapId]['dynamic']['polylines'])\n        }\n\n        /**\n         * bounds\n         */\n        window.growtypeMap[mapId]['dynamic']['mapInstance'].initialZoom = true;\n        if (filteredMarkers.length !== 0 && window.growtypeMap[mapId]['static']['initialZoom'] === null) {\n            window.growtypeMap[mapId]['dynamic']['mapInstance'].fitBounds(bounds);\n        }\n\n        /**\n         * Spinner\n         */\n        $('.growtype-map-container[data-map-id=\"' + mapId + '\"] + .spinner-border').hide();\n\n        /**\n         * Disable loading\n         */\n        markersLoading = false;\n\n        return filteredMarkers;\n    }\n}\n\nfunction inrange(min, number, max) {\n    if (!isNaN(number) && (number >= min) && (number <= max)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport {setMarkers};\n","/**\n * Update all markers\n */\nimport {setMarkers} from \"./setMarkers\";\n\nfunction updateMarkers(mapId, groupId = null, clearOldMarkers = true) {\n    if (groupId === null) {\n        Object.entries(window.growtypeMap[mapId]['static']['markersGroups']).map(function (element, index) {\n            if (element[1]['markers'].length > 0) {\n                window.growtypeMap[mapId]['dynamic']['markersGroups'][element[0]] = {\n                    markers: setMarkers(mapId, element[0], clearOldMarkers)\n                }\n            }\n        })\n    } else {\n        window.growtypeMap[mapId]['dynamic']['markersGroups'][groupId] = {\n            markers: setMarkers(mapId, groupId, clearOldMarkers),\n        }\n    }\n}\n\nexport {updateMarkers};\n","/**\n * Update all markers\n */\nfunction updateMarkersClusters(mapId, markers) {\n\n    console.log(markers, 'markers')\n\n    const markerClustererMarkers = markers.filter(function (marker) {\n        return !marker.is_featured;\n    });\n\n    let getGoogleClusterInlineSvg = function (color) {\n        var encoded = window.btoa('<svg fill=\"' + color + '\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\"><circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" /><circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" /><circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" /></svg>');\n        return ('data:image/svg+xml;base64,' + encoded);\n    };\n\n    let clusterStyles = [\n        {\n            url: getGoogleClusterInlineSvg('#3548ff'),\n            width: 40,\n            height: 40,\n            // anchor: [16, 0],\n            textColor: 'white',\n            textSize: 12\n        }\n    ];\n\n    window.growtypeMap[mapId]['dynamic']['markerCluster'] = new MarkerClusterer(window.growtypeMap[mapId]['dynamic']['mapInstance'], markerClustererMarkers, {\n        maxZoom: window.growtypeMap[mapId]['static']['mapType'] === 'route' ? 10 : 16,\n        gridSize: 80,\n        styles: clusterStyles,\n        // imagePath: '../images/m'\n    });\n}\n\nexport {updateMarkersClusters};\n","import {updateMarkers} from \"./partials/updateMarkers\";\nimport {updateMarkersClusters} from \"./partials/updateMarkersClusters\";\nimport {setMapInstance} from \"./partials/setMapInstance\";\nimport {initSearch} from \"./partials/search/initSearch\";\nimport {tilesloadedListener} from \"./partials/listeners/tilesloadedListener\";\nimport {idleListener} from \"./partials/listeners/idleListener\";\nimport {taxonomyFilter} from \"./partials/filters/taxonomyFilter\";\n\n$ = jQuery;\n\nfunction growtypeMapInit() {\n    $('.growtype-map-container').each(function (index, mapContainer) {\n        /**\n         * Initial values\n         */\n        let mapId = $(mapContainer).attr('data-map-id');\n\n        window.growtypeMap[mapId]['dynamic'] = {\n            mapInstance: null,\n            markersGroups: [],\n            markerCluster: null,\n            selectedTax: [],\n            selectedTax2: [],\n            prevInfoWindow: null,\n            visibleMarkersPostsIds: {},\n            mapsInitialLoading: true,\n            previousVisibleMarkersPostsIds: {},\n            lastPostWasRetrieved: false,\n            mainMarker: null,\n            postsRequested: false,\n            polylines: [],\n            currentMarkersGroupId: null,\n            initialZoom: $(mapContainer).attr('data-initial-zoom') && $(mapContainer).attr('data-initial-zoom').length > 0 ? parseInt($(mapContainer).attr('data-initial-zoom')) : null,\n            searchBox: null,\n        }\n\n        /**\n         * Set current markers group\n         */\n        if (window.growtypeMap[mapId]['static']['initiallyShowAllRoutes'] === 'false') {\n            window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId'] = window.growtypeMap[mapId]['static']['initialGroupId']\n        }\n\n        window.growtypeMap[mapId]['dynamic']['mapInstance'] = setMapInstance(\n            mapId,\n            mapContainer,\n            window.growtypeMap[mapId]['static']['initialLat'],\n            window.growtypeMap[mapId]['static']['initialLng'],\n            window.growtypeMap[mapId]['static']['initialZoom']\n        )\n\n        /**\n         * Set markers\n         */\n        updateMarkers(mapId, window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId'], false)\n\n        /**\n         * Get initial markers clusters\n         */\n        updateMarkersClusters(mapId, [])\n\n        /**\n         * Search location\n         */\n        initSearch(mapId)\n\n        /**\n         * tilesloaded\n         */\n        tilesloadedListener(mapId)\n\n        /**\n         * idle\n         */\n        idleListener(mapId)\n\n        /**\n         *\n         */\n        taxonomyFilter(mapId)\n    })\n}\n\n/**\n *\n * @type {growtypeMapInit}\n */\nwindow.growtypeMapInit = growtypeMapInit;\n\n\n","/**\n *\n * @param element\n * @param lat\n * @param lng\n * @param initialZoom\n * @returns {*}\n */\nfunction setMapInstance(mapId, mapContainer, lat, lng, initialZoom) {\n    return new google.maps.Map(mapContainer, {\n        center: new google.maps.LatLng(lat, lng),\n        zoom: parseInt(initialZoom),\n        options: {\n            gestureHandling: 'greedy'\n        },\n        scrollwheel: false,\n        disableDefaultUI: true,\n        mapTypeControl: false,\n        scaleControl: false,\n        zoomControl: true,\n        styles: window.growtypeMap[mapId]['static']['mapStyle']\n    });\n}\n\nexport {setMapInstance};\n","function initSearch(mapId) {\n\n    /**\n     * Set initial location from url\n     */\n    if (window.location.search.length > 0 && window.location.search.indexOf('location') > 0) {\n        let geocoder = new google.maps.Geocoder();\n        let initialLocationAddress = window.location.search.replace('?location=', '');\n\n        geocoder.geocode({'address': initialLocationAddress}, function (results, status) {\n            if (status === 'OK') {\n                mapInstance.setCenter(results[0].geometry.location);\n                mapInstance.setZoom(14);\n            } else {\n                console.log('Geocode was not successful for the following reason: ' + status);\n            }\n        });\n    }\n\n    /**\n     * Search\n     */\n        // Create the search box and link it to the UI element.\n    const searchInput = document.getElementById(\"growtype-map-search\");\n    window.growtypeMap[mapId]['dynamic']['searchBox'] = searchInput !== null ? new google.maps.places.SearchBox(searchInput) : null;\n\n    const options = {\n        componentRestrictions: {country: \"LT\"},\n        // fields: [\"address_components\", \"geometry\", \"icon\", \"name\"],\n        // strictBounds: false,\n        // types: [\"establishment\"],\n    };\n\n    /**\n     * TODO fix autocomplete\n     */\n    // const autocomplete = new google.maps.places.Autocomplete(input, options);\n    //\n    // autocomplete.bindTo(\"bounds\", mapInstance);\n\n    /**\n     * Search locations\n     */\n\n    if (searchInput) {\n        mapInstance.controls[google.maps.ControlPosition.TOP_LEFT].push(searchInput);\n    }\n\n    if (window.growtypeMap[mapId]['dynamic']['searchBox']) {\n        window.growtypeMap[mapId]['dynamic']['searchBox'].addListener(\"places_changed\", () => {\n            if (prevInfowindow !== null) {\n                prevInfowindow.close();\n            }\n\n            const places = window.growtypeMap[mapId]['dynamic']['searchBox'].getPlaces();\n\n            if (places.length == 0) {\n                return;\n            }\n\n            // For each place, get the icon, name and location.\n            const bounds = new google.maps.LatLngBounds();\n\n            places.forEach((place) => {\n                if (!place.geometry || !place.geometry.location) {\n                    console.log(\"Returned place contains no geometry\");\n                    return;\n                }\n\n                if (place.geometry.viewport) {\n                    // Only geocodes have viewport.\n                    bounds.union(place.geometry.viewport);\n                } else {\n                    bounds.extend(place.geometry.location);\n                }\n            });\n\n            window.growtypeMap[mapId]['dynamic']['mapInstance'].fitBounds(bounds);\n        });\n    }\n}\n\nexport {initSearch};\n","import {updateMarkersClusters} from \"../updateMarkersClusters\";\n\nfunction tilesloadedListener(mapId) {\n    /**\n     * Show only visible markers\n     */\n    google.maps.event.addListener(window.growtypeMap[mapId]['dynamic']['mapInstance'], \"tilesloaded\", () => {\n        window.growtypeMap[mapId]['dynamic']['markerCluster'].clearMarkers();\n\n        if (Array.isArray(window.growtypeMap[mapId]['dynamic']['markersGroups'][window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId']]['markers'])) {\n            const visibleMarkers = window.growtypeMap[mapId]['dynamic']['markersGroups'][window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId']]['markers'].filter(function (marker) {\n                return window.growtypeMap[mapId]['dynamic']['mapInstance'].getBounds().contains(marker.getPosition());\n            });\n\n            updateMarkersClusters(mapId, visibleMarkers)\n        }\n\n        google.maps.event.addListener(window.growtypeMap[mapId]['dynamic']['markerCluster'], 'click', function (cluster) {\n            if (window.growtypeMap[mapId]['dynamic']['prevInfoWindow'] !== null) {\n                window.growtypeMap[mapId]['dynamic']['prevInfoWindow'].close();\n            }\n        });\n    });\n}\n\nexport {tilesloadedListener};\n","function idleListener(mapId) {\n    window.growtypeMap[mapId]['dynamic']['mapInstance'].addListener(\"idle\", () => {\n        window.growtypeMap[mapId]['dynamic']['visibleMarkersPostsIds'] = {};\n\n        if (Array.isArray(window.growtypeMap[mapId]['dynamic']['markersGroups'][window.growtypeMap[mapId]['static']['initialGroupId']])) {\n            window.growtypeMap[mapId]['dynamic']['markersGroups'][window.growtypeMap[mapId]['static']['initialGroupId']]['markers'].map(function (marker, index) {\n                if (window.growtypeMap[mapId]['dynamic']['mapInstance'].getBounds().contains(marker.getPosition())) {\n                    if (marker.location_id == $('.growtype-map-container[data-map-id=\"' + mapId + '\"]').attr('main-marker')) {\n                        window.growtypeMap[mapId]['dynamic']['mainMarker'] = {\n                            location_id: marker.location_id,\n                            index: index\n                        }\n                    }\n                    visibleMarkersPostsIds[marker.location_id] = marker.location_id;\n                }\n            });\n        }\n\n        if (!window.growtypeMap[mapId]['dynamic']['mapsInitialLoading'] && JSON.stringify(window.growtypeMap[mapId]['dynamic']['previousVisibleMarkersPostsIds']) !== JSON.stringify(window.growtypeMap[mapId]['dynamic']['visibleMarkersPostsIds'])) {\n            // getMarkersPosts(0, true)\n        }\n\n        if (window.growtypeMap[mapId]['dynamic']['searchBox']) {\n            window.growtypeMap[mapId]['dynamic']['searchBox'].setBounds(window.growtypeMap[mapId]['dynamic']['mapInstance'].getBounds());\n        }\n\n        /**\n         * Open specific marker\n         */\n        if (window.growtypeMap[mapId]['dynamic']['mapsInitialLoading'] && $('.growtype-map-container[data-map-id=\"' + mapId + '\"]').attr('infowindow-open') && mainMarker !== null) {\n            google.maps.event.trigger(window.growtypeMap[mapId]['dynamic']['markersGroups'][window.growtypeMap[mapId]['static']['initialGroupId']][window.growtypeMap[mapId]['dynamic']['mainMarker'].index], 'click');\n        }\n\n        /**\n         * Maps fully loaded\n         * @type {boolean}\n         */\n        window.growtypeMap[mapId]['dynamic']['mapsInitialLoading'] = false;\n\n        /**\n         * Set used markers posts ids\n         * @type {{}}\n         */\n        window.growtypeMap[mapId]['dynamic']['previousVisibleMarkersPostsIds'] = window.growtypeMap[mapId]['dynamic']['visibleMarkersPostsIds'];\n    });\n}\n\nexport {idleListener};\n","import {updateMarkers} from \"../updateMarkers\";\nimport {updateMarkersClusters} from \"../updateMarkersClusters\";\n\nfunction taxonomyFilter(mapId) {\n    $('.growtype-map-taxonomy-nav .growtype-map-taxonomy-item .btn').click(function () {\n        let $this = $(this)\n\n        $this.toggleClass('is-active');\n\n        /**\n         * Reset data\n         */\n        if (window.growtypeMap[mapId]['static']['initiallyShowAllRoutes'] !== 'false') {\n            window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId'] = null;\n        }\n\n        window.growtypeMap[mapId]['dynamic']['selectedTax'] = [];\n        window.growtypeMap[mapId]['dynamic']['selectedTax2'] = [];\n\n        $this.closest('.growtype-map-taxonomy-nav').find('.btn.is-active').map(function (index, element) {\n            if ($(element).attr('data-tax')) {\n                window.growtypeMap[mapId]['dynamic']['selectedTax'].push($(element).attr('data-tax'))\n            }\n            if ($(element).attr('data-tax2')) {\n                window.growtypeMap[mapId]['dynamic']['selectedTax2'].push($(element).attr('data-tax2'))\n            }\n        });\n\n        setTimeout(function () {\n            updateMarkers(mapId, window.growtypeMap[mapId]['dynamic']['currentMarkersGroupId'], true)\n            updateMarkersClusters(mapId, [])\n        }, 500)\n    });\n}\n\nexport {taxonomyFilter};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t986: 0,\n\t301: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkplugin\"] = self[\"webpackChunkplugin\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [301], function() { return __webpack_require__(882); })\nvar __webpack_exports__ = __webpack_require__.O(undefined, [301], function() { return __webpack_require__(283); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","createMarker","width","height","radius","text","canvas","context","document","createElement","getContext","clearRect","fillStyle","strokeStyle","beginPath","moveTo","lineTo","quadraticCurveTo","lineWidth","closePath","fill","stroke","font","textAlign","fillText","toDataURL","itemExistsWhenFiltersApplied","mapId","categories","locations","groupCategories","groupLocations","itemExists","categoryExists","window","growtypeMap","map","item","indexOf","length","areaExists","selectedTax","markersLoading","setMarkers","groupId","clearOldMarkers","$","show","Array","isArray","Object","values","markerGroup","element","setMap","undefined","clearMarkers","bounds","google","maps","LatLngBounds","filteredMarkers","visibleMarkersCounter","marker","i","enabled","latlng","latLng","replace","split","lat","lng","inrange","console","error","position","LatLng","extend","fitBounds","scaletSize","Size","parseInt","icon","custom_icon","url","scaledSize","origin","Point","anchor","marketData","optimized","location","type","newMarker","Marker","infowindow","contentString","content","InfoWindow","event","addListener","close","zoomChangeBoundsListener","this","getZoom","initialZoom","setZoom","removeListener","evt","open","shouldFocus","push","Polyline","strokeColor","strokeOpacity","strokeWeight","setPreciseRoute","hide","min","number","max","isNaN","updateMarkers","entries","index","markers","updateMarkersClusters","log","color","markerClustererMarkers","filter","is_featured","clusterStyles","btoa","textColor","textSize","MarkerClusterer","maxZoom","gridSize","styles","jQuery","growtypeMapInit","each","mapContainer","attr","mapInstance","markersGroups","markerCluster","selectedTax2","prevInfoWindow","visibleMarkersPostsIds","mapsInitialLoading","previousVisibleMarkersPostsIds","lastPostWasRetrieved","mainMarker","postsRequested","polylines","currentMarkersGroupId","searchBox","Map","center","zoom","options","gestureHandling","scrollwheel","disableDefaultUI","mapTypeControl","scaleControl","zoomControl","setMapInstance","search","geocoder","Geocoder","initialLocationAddress","geocode","results","status","setCenter","geometry","searchInput","getElementById","places","SearchBox","controls","ControlPosition","TOP_LEFT","prevInfowindow","getPlaces","forEach","place","viewport","union","initSearch","visibleMarkers","getBounds","contains","getPosition","cluster","tilesloadedListener","location_id","JSON","stringify","setBounds","trigger","idleListener","click","$this","toggleClass","closest","find","setTimeout","taxonomyFilter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","o","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}